name: Unit tests
on:
  pull_request:
    branches:
      - main

permissions:
  contents: all

jobs:
    testing:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4.2.2
      - name: Setup Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.13'
      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest
      - name: "Run tests"
        run: |
          pytest test_check_attendance.py
          pytest test_import_export.py
          pytest test_managing_list.py
    auto-formatting:
      needs: testing
      runs-on: ubuntu-latest
      permissions:
        contents: write
      steps:
      - uses: actions/checkout@v4.2.2
        with:
          ref: ${{ github.head_ref }}
      - name: autopep8
        uses: peter-evans/autopep8@v2.0.0
        with:
          args: --exit-code --recursive --in-place --aggressive --aggressive .
      - name: Check for modified files
        id: git-check
        run: echo "modified=$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)" >> $GITHUB_OUTPUT
      - name: Push changes
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git commit -am "Automated changes"
          git push
    lint:
      needs: auto-formatting
      runs-on: ubuntu-latest

      permissions:
        contents: read
        packages: read
        statuses: write
      steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
      - name: 'Run PEP8'
        uses: quentinguidee/pep8-action@v1
        with:
          arguments: '--max-line-length=120'
          
    todo-to-issue:  
      runs-on: "ubuntu-latest"
      permissions:
            issues: write
      steps:
        - uses: "actions/checkout@v4"
        - name: "TODO to Issue"
          uses: "alstr/todo-to-issue-action@v5"
          with:
            INSERT_ISSUE_URLS: "true"
            CLOSE_ISSUES: "true"
            AUTO_ASSIGN: "true"
        - name: Set Git user
          run: |
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
        - name: Commit and Push Changes
          run: |
            git add -A
            if [[ `git status --porcelain` ]]; then
              git commit -m "Automatically added GitHub issue links to TODOs"
              git push origin main
            else
              echo "No changes to commit"
            fi  







        
      
